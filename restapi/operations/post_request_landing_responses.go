package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// HTTP code for type PostRequestLandingOK
const PostRequestLandingOKCode int = 200

/*PostRequestLandingOK OK

swagger:response postRequestLandingOK
*/
type PostRequestLandingOK struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewPostRequestLandingOK creates PostRequestLandingOK with default headers values
func NewPostRequestLandingOK() *PostRequestLandingOK {
	return &PostRequestLandingOK{}
}

// WithPayload adds the payload to the post request landing o k response
func (o *PostRequestLandingOK) WithPayload(payload string) *PostRequestLandingOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post request landing o k response
func (o *PostRequestLandingOK) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostRequestLandingOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// HTTP code for type PostRequestLandingServiceUnavailable
const PostRequestLandingServiceUnavailableCode int = 503

/*PostRequestLandingServiceUnavailable Landing Request Service Not available

swagger:response postRequestLandingServiceUnavailable
*/
type PostRequestLandingServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewPostRequestLandingServiceUnavailable creates PostRequestLandingServiceUnavailable with default headers values
func NewPostRequestLandingServiceUnavailable() *PostRequestLandingServiceUnavailable {
	return &PostRequestLandingServiceUnavailable{}
}

// WithPayload adds the payload to the post request landing service unavailable response
func (o *PostRequestLandingServiceUnavailable) WithPayload(payload string) *PostRequestLandingServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post request landing service unavailable response
func (o *PostRequestLandingServiceUnavailable) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostRequestLandingServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
